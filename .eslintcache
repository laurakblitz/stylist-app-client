[{"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx":"1","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts":"2","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx":"3","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx":"4","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx":"5","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx":"6","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx":"7","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx":"8","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx":"9","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx":"10","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx":"11","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx":"12","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx":"13","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx":"14","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx":"15","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx":"16","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx":"17","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx":"18","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/helpers/environment.tsx":"19"},{"size":500,"mtime":1609359152291,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1609359152292,"results":"22","hashOfConfig":"21"},{"size":3423,"mtime":1610522796666,"results":"23","hashOfConfig":"21"},{"size":1886,"mtime":1610545208272,"results":"24","hashOfConfig":"21"},{"size":3274,"mtime":1610545190768,"results":"25","hashOfConfig":"21"},{"size":3993,"mtime":1610545186028,"results":"26","hashOfConfig":"21"},{"size":1038,"mtime":1609899898934,"results":"27","hashOfConfig":"21"},{"size":200,"mtime":1609898652157,"results":"28","hashOfConfig":"21"},{"size":3703,"mtime":1610545204381,"results":"29","hashOfConfig":"21"},{"size":2705,"mtime":1610516538374,"results":"30","hashOfConfig":"21"},{"size":4394,"mtime":1610545453852,"results":"31","hashOfConfig":"21"},{"size":1799,"mtime":1610544552603,"results":"32","hashOfConfig":"21"},{"size":4172,"mtime":1610516542312,"results":"33","hashOfConfig":"21"},{"size":2695,"mtime":1610516533357,"results":"34","hashOfConfig":"21"},{"size":2780,"mtime":1610516635229,"results":"35","hashOfConfig":"21"},{"size":2679,"mtime":1610516675606,"results":"36","hashOfConfig":"21"},{"size":3784,"mtime":1610545376523,"results":"37","hashOfConfig":"21"},{"size":3528,"mtime":1610546004705,"results":"38","hashOfConfig":"21"},{"size":268,"mtime":1610543000723,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"jdknth",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx",[],["85","86"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx",["87","88","89","90","91","92"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx",["93"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx",["94"],"import React, { Component } from 'react';\n\ntype LoginState = {\n    username: string,\n    password: string,\n}\n\nexport default class Login extends React.Component<{}, LoginState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = (event: any) => {\n        event.preventDefault();\n        fetch('http://localhost:3000/user/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username, \n                password: this.state.password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            }),\n        })\n        .then((res) => res.json())\n        .then(data => {\n            this.props.setToken(data.sessionToken)\n        })\n    }\n\n    render() {\n        return(\n            <div>\n\n            </div>\n        )\n    }\n}",["95","96"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx",["97","98"],"import React, {Component} from 'react';\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx",["99","100","101","102"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx",["103","104"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormGroup,\n    FormLabel,\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\ntype Props = {\n    updateCloset: any,\n    updateOff: () => void,\n    token: string,\n    fetchClosetPosts: () => void\n}\n\ntype State = {\n    image: string,\n    editCategory: string,\n    handleopen: boolean\n}\n\nexport default class ClosetEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            image: '',\n            editCategory: this.props.updateCloset.category,\n            handleopen: false,\n        }\n    }\n\n    handleSubmitUpdate = (event: any) => {\n        const editCloset = new FormData()\n        editCloset.append('image', this.state.image)\n        editCloset.append('category', this.state.editCategory)\n        fetch(`${APIURL}/closet/update/${this.props.updateCloset.id}`, {\n            method: 'PUT',\n            body: editCloset,\n            headers: new Headers({\n                'Authorization': this.props.token\n            })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchClosetPosts();\n        })\n    }\n\n    editClosetForm = () => {\n        this.props.updateOff();\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    singleFileChangeHandler = (event: any) => {\n        this.setState({\n            image: event.target.files[0]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Dialog open={true} onClose={this.handleClose}>\n                <DialogTitle id=\"CreatePopup\">\n                        Update your closet!\n                    </DialogTitle>\n                    <DialogContent id=\"Create\">\n                        <input\n                            accept=\"image/*\"\n                            className=\"input\"\n                            type=\"file\"\n                            onChange={this.singleFileChangeHandler} />\n                            <label htmlFor=\"icon-button-file\">\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <PhotoCamera />\n                            </IconButton>\n                        </label>\n                        <br />\n                        <br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Category</FormLabel>\n                            <RadioGroup defaultValue=\"Category\" aria-label=\"Category\" name=\"customized-radios\" onChange={(e) => this.setState({ editCategory: e.target.value })}>\n                                <FormControlLabel value=\"Shirt\" control={<Radio />} label=\"Shirt\" />\n                                <FormControlLabel value=\"Pants\" control={<Radio />} label=\"Pants\" />\n                                <FormControlLabel value=\"Dress\" control={<Radio />} label=\"Dress\" />\n                                <FormControlLabel value=\"Outerwear\" control={<Radio />} label=\"Outerwear\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <DialogActions>\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={this.handleSubmitUpdate}>Update</Button>\n                        </label>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\n// 'Content-Type': 'application/json',\n\n{/* <TextField\nclassName=\"modal-text-field\"\nvalue={this.state.editCategory}\nonChange={(e) => this.setState({ editCategory: e.target.value })}\nlabel=\"Edit Category\"/> */}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx",["105","106","107","108"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\nimport { render } from '@testing-library/react';\n\ntype Props = {\n    // myCloset: any,\n    myCloset: Array<{ id: number, image: string, category: number }>\n    editUpdateCloset: (closet: any) => void,\n    updateOn: () => void,\n    fetchClosetPosts: () => void,\n    token: string\n}\nexport default class ClosetTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (closet: any) => {\n        fetch(`${APIURL}/closet/delete/${closet.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchClosetPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myCloset\n                    ? this.props.myCloset.map((myCloset) => (\n                        <Card key={myCloset.id}>\n                            <CardContent><img src={myCloset.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myCloset.category}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(myCloset); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myCloset) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n    // postMapper = () => {\n    //     let closets = this.props.myCloset;\n\n    //     return closets.map((closet: any, index: number) => {\n    //         return (\n    //             <Card key={index}>\n    //                 <CardContent><img src={closet.image} width=\"25%\" height=\"25%\" /></CardContent>\n    //                 <CardContent>{closet.category}</CardContent>\n    //                 <CardContent>\n    //                     <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(closet); this.props.updateOn() }}>Edit</Button>\n    //                     <Button variant=\"outlined\" onClick={() => { this.deletePost(closet) }}>Clear</Button>\n    //                 </CardContent>\n    //             </Card>\n    //         )\n    //     })\n    // }\n\n    // render() {\n    //     return (\n    //         <Table>\n    //             {this.postMapper()}\n    //         </Table>\n    //     )\n    // }\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx",["109","110","111"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\n\ntype Props = {\n    myWishlist: Array<{ id: number, image: string, comment: string }>,\n    editUpdateWishlist: (wishlist: any) => void,\n    updateOn: () => void,\n    fetchWishlistPosts: () => void,\n    token: string\n}\nexport default class WishlistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (wishlist: any) => {\n        fetch(`${APIURL}/wishlist/delete/${wishlist.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchWishlistPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myWishlist\n                    ? this.props.myWishlist.map((myWishlist) => (\n                        <Card key={myWishlist.id}>\n                            <CardContent><img src={myWishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myWishlist.comment}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(myWishlist); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myWishlist) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n//     postMapper = () => {\n//         let wishlists = this.props.myWishlist;\n\n//         return wishlists.map((wishlist: any, index: number) => {\n//             return (\n//                 <Card key={index}>\n//                     <CardContent><img src={wishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n//                     <CardContent>{wishlist.comment}</CardContent>\n//                     <CardContent>\n//                         <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(wishlist); this.props.updateOn() }}>Edit</Button>\n//                         <Button variant=\"outlined\" onClick={() => { this.deletePost(wishlist) }}>Clear</Button>\n//                     </CardContent>\n//                 </Card>\n//             )\n//         })\n//     }\n\n//     render() {\n//         return (\n//             <Table>\n//                 {this.postMapper()}\n//             </Table>\n//         )\n//     }\n// }","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx",["112"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/helpers/environment.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":15},{"ruleId":"117","severity":1,"message":"122","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":18},{"ruleId":"117","severity":1,"message":"123","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"124","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":18},{"ruleId":"117","severity":1,"message":"125","line":7,"column":8,"nodeType":"119","messageId":"120","endLine":7,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":4,"column":5,"nodeType":"119","messageId":"120","endLine":4,"endColumn":11},{"ruleId":"117","severity":1,"message":"126","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"117","severity":1,"message":"129","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"126","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"124","line":8,"column":5,"nodeType":"119","messageId":"120","endLine":8,"endColumn":15},{"ruleId":"117","severity":1,"message":"130","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":12,"column":8,"nodeType":"119","messageId":"120","endLine":12,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":21,"column":5,"nodeType":"134","messageId":"135","endLine":23,"endColumn":6},{"ruleId":"117","severity":1,"message":"136","line":9,"column":5,"nodeType":"119","messageId":"120","endLine":9,"endColumn":14},{"ruleId":"137","severity":1,"message":"138","line":123,"column":1,"nodeType":"139","messageId":"140","endLine":127,"endColumn":28},{"ruleId":"117","severity":1,"message":"141","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":7,"endColumn":10},{"ruleId":"117","severity":1,"message":"142","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":20,"column":5,"nodeType":"134","messageId":"135","endLine":22,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":40,"column":42,"nodeType":"145","endLine":40,"endColumn":95},{"ruleId":"117","severity":1,"message":"141","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":7,"endColumn":10},{"ruleId":"132","severity":1,"message":"133","line":18,"column":5,"nodeType":"134","messageId":"135","endLine":20,"endColumn":6},{"ruleId":"143","severity":1,"message":"144","line":38,"column":42,"nodeType":"145","endLine":38,"endColumn":97},{"ruleId":"117","severity":1,"message":"136","line":8,"column":5,"nodeType":"119","messageId":"120","endLine":8,"endColumn":14},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"@typescript-eslint/no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Component' is defined but never used.",["146"],["147"],"'React' is defined but never used.","'Register' is defined but never used.","'Login' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FormGroup' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Table' is defined but never used.","'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]