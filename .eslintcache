[{"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx":"1","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts":"2","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx":"3","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx":"4","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx":"5","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx":"6","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx":"7","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx":"8","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx":"9","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx":"10","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx":"11","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx":"12","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx":"13","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx":"14","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx":"15","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx":"16","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx":"17","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx":"18","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/helpers/environment.tsx":"19","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/UserList.tsx":"20"},{"size":500,"mtime":1609359152291,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1609359152292,"results":"23","hashOfConfig":"22"},{"size":2181,"mtime":1610718089015,"results":"24","hashOfConfig":"22"},{"size":2251,"mtime":1610686770483,"results":"25","hashOfConfig":"22"},{"size":3374,"mtime":1610718356513,"results":"26","hashOfConfig":"22"},{"size":3847,"mtime":1610718373646,"results":"27","hashOfConfig":"22"},{"size":1038,"mtime":1609899898934,"results":"28","hashOfConfig":"22"},{"size":200,"mtime":1609898652157,"results":"29","hashOfConfig":"22"},{"size":4085,"mtime":1610686778062,"results":"30","hashOfConfig":"22"},{"size":2777,"mtime":1610680416772,"results":"31","hashOfConfig":"22"},{"size":4394,"mtime":1610689630048,"results":"32","hashOfConfig":"22"},{"size":2852,"mtime":1610718335356,"results":"33","hashOfConfig":"22"},{"size":4148,"mtime":1610690011813,"results":"34","hashOfConfig":"22"},{"size":2695,"mtime":1610689998248,"results":"35","hashOfConfig":"22"},{"size":2829,"mtime":1610592980241,"results":"36","hashOfConfig":"22"},{"size":2679,"mtime":1610592983145,"results":"37","hashOfConfig":"22"},{"size":3784,"mtime":1610690007877,"results":"38","hashOfConfig":"22"},{"size":3518,"mtime":1610690002712,"results":"39","hashOfConfig":"22"},{"size":268,"mtime":1610659006260,"results":"40","hashOfConfig":"22"},{"size":1239,"mtime":1610686773980,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"jdknth",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx",[],["96","97"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx",["98"],"import React from 'react';\nimport APIURL from './helpers/environment';\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\n\n// type Props = {\n//     token: string\n// }\n\ntype User = {\n    token: string;\n    user: {\n        username: string;\n        id: string;\n    }\n}\n\ntype Props = {}\n\ntype State = {\n    userId: string;\n    token: string;\n    // role: 'user' | 'admin';\n}\n\nexport default class App extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            token: '',\n            userId: '',\n        }\n    }\n\n    componentDidMount = () => {\n        if (localStorage.getItem('token')) {\n            this.setState({\n                token: localStorage.getItem('token') || ''\n            })\n        }\n    }\n\n    fetchUser = () => {\n        fetch(`${APIURL}/user/`, {\n            method: 'GET',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.state.token\n            })\n        })\n            .then((res) => res.json())\n            .then((user) => {\n                this.setState({\n                    userId: user.id\n                })\n            })\n    }\n\n    updateToken = (newToken: string) => {\n        localStorage.setItem('token', newToken);\n        this.setState({\n            token: newToken,\n        });\n    }\n\n    // updateToken = (newUser: User) => {\n    //     const {token, user} = newUser;\n\n    //     localStorage.setItem('token', token);\n    //     this.setState({\n    //         token,\n    //         userId: user.id\n    //     });\n    // }\n\n    logout = () => {\n        localStorage.clear();\n        this.setState({\n            token: ''\n        })\n    }\n\n    viewConductor = () => {\n        return !this.state.token ? (\n            <div>\n                <Auth updateToken={this.updateToken.bind(this)} />\n            </div>\n        ) : (\n                <Home clickLogout={this.logout.bind(this)} token={this.state.token} />)\n    };\n\n\n    render() {\n        return (\n            <div>\n                {this.viewConductor()}\n            </div>\n        );\n    }\n}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx",["99","100"],"import React from 'react';\nimport APIURL from '../../helpers/environment';\nimport {\n    AppBar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\n\ntype User =  {\n    token: string;\n    user: {\n        username: string;\n        id: string;\n    }\n}\n\ntype Props = {\n    login: boolean,\n    updateToken: (newToken: string) => void,\n    // updateUser: (newUser: User) => void,\n    // loginHandle: () => void\n    toggle: () => void\n}\n\ntype State = {\n    username: string,\n    password: string,\n    handleopen: boolean\n}\n\nexport default class Login extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            handleopen: false\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`${APIURL}/user/login`, {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            }),\n        })\n            .then((res) => res.json())\n            .then(data => {\n                console.log(data)\n                this.props.updateToken(data.token);\n                this.handleClose();\n            });\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    setUsername(event: string) {\n        this.setState({\n            username: (event)\n        })\n    }\n    setPassword(event: string) {\n        this.setState({\n            password: (event)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpen} id=\"LoginButton\" variant=\"outlined\">\n                    <strong>Login</strong>\n                </Button>\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n                    <DialogTitle /*id=\"dialogTitle\"*/ id=\"form-dialog-title\">\n                        <strong>Login</strong>\n                    </DialogTitle>\n                    <DialogContent id=\"Login\">\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Username\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e) => this.setUsername(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            onChange={(e) => this.setPassword(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions id=\"Loginbtn\">\n                        <Button onClick={this.handleSubmit} id=\"btn\">\n                            <strong>Login</strong>\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx",["101"],"import React from 'react';\nimport APIURL from '../../helpers/environment';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n} from '@material-ui/core';\n\ntype User =  {\n    token: string;\n    user: {\n        username: string;\n        id: string;\n    }\n}\n\ntype Props = {\n    login: boolean,\n    updateToken: (newToken: string) => void,\n    // updateUser: (newUser: User) => void,\n    toggle: () => void\n}\n\ntype State = {\n    username: string,\n    email: string,\n    password: string,\n    handleopen: boolean,\n}\n\nexport default class Register extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            handleopen: false,\n        }\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        fetch(`${APIURL}/user/register`, {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            }),\n        })\n            .then((res) => res.json())\n            .then(data => {\n                console.log(data)\n                this.props.updateToken(data.token);\n                this.handleClose();\n            })\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    setUsername(event: string) {\n        this.setState({\n            username: (event)\n        })\n    }\n    setEmail(event: string) {\n        this.setState({\n            email: (event)\n        })\n    }\n    setPassword(event: string) {\n        this.setState({\n            password: (event)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.handleOpen} id=\"RegisterButton\" variant=\"outlined\">\n                    <strong>Sign Up</strong>\n                </Button>\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\n                    <DialogTitle id=\"dialogTitle\">\n                        <strong>Sign Up</strong>\n                    </DialogTitle>\n                    <DialogContent id=\"Register\">\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Username\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e) => this.setUsername(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Email\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e) => this.setEmail(e.target.value)}\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            onChange={(e) => this.setPassword(e.target.value)}\n                        />\n                    </DialogContent>\n                    <DialogActions id=\"Registerbtn\">\n                        <Button onClick={this.handleSubmit} id=\"btn\">\n                            <strong>Sign Up</strong>\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx",["102"],"import React, { Component } from 'react';\n\ntype LoginState = {\n    username: string,\n    password: string,\n}\n\nexport default class Login extends React.Component<{}, LoginState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = (event: any) => {\n        event.preventDefault();\n        fetch('http://localhost:3000/user/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username, \n                password: this.state.password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            }),\n        })\n        .then((res) => res.json())\n        .then(data => {\n            this.props.setToken(data.sessionToken)\n        })\n    }\n\n    render() {\n        return(\n            <div>\n\n            </div>\n        )\n    }\n}",["103","104"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx",["105","106"],"import React, {Component} from 'react';\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx",["107","108","109","110"],"import React from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    ButtonGroup,\n    Button,\n    IconButton\n} from '@material-ui/core';\n\nimport Register from '../Auth/Register';\nimport Login from '../Auth/Login';\n\ntype Props = {\n    onClick: () => void;\n    token: string;\n};\n\nexport default class Navbar extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    handleOpenReg = () => {\n        this.setState({\n            register: true,\n        });\n    };\n\n    handleOpenLog = () => {\n        this.setState({\n            login: true,\n        });\n    };\n\n    HandleCloseReg = () => {\n        this.setState({\n            register: false,\n        });\n    };\n\n    handleCloseLog = () => {\n        this.setState({\n            login: false,\n        });\n    };\n\n    render() {\n        return (\n            <AppBar position=\"static\">\n                <Typography className=\"root\" variant=\"h5\">StyList</Typography>\n                <Toolbar className=\"root\">\n                    <ButtonGroup>\n                    <Button variant=\"outlined\" color=\"inherit\"><a href='/closet/allcloset' style={{ color: 'white', textDecoration: 'none' }}>Closet</a></Button>\n                        <Button variant=\"outlined\" color=\"inherit\"><a href='/wishlist/allwishlist' style={{ color: 'white', textDecoration: 'none' }}>Wishlist</a></Button>\n                        <Button variant=\"outlined\" color=\"inherit\"><a href='/users' style={{ color: 'white', textDecoration: 'none' }}>See Who Else is Using StyList</a></Button>\n                        <Button variant=\"outlined\" color=\"inherit\" onClick={this.props.onClick}>Logout</Button>\n                    </ButtonGroup>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\n\n// import React from 'react';\n// import {\n//     AppBar,\n//     Toolbar,\n//     Typography,\n//     ButtonGroup,\n//     Button\n// } from '@material-ui/core';\n\n// import Login from '../Auth/Login';\n// import Register from '../Auth/Register';\n\n// type Props = {\n//     // onClick: () => void;\n//     token: string;\n//     clickLogout: () => void;\n//     updateToken: (newToken: string) => void;\n// };\n\n// type State = {\n//     register: boolean,\n//     login: boolean\n// }\n\n// export default class Navbar extends React.Component<Props, State> {\n//     constructor(props: Props) {\n//         super(props);\n//         this.state = {\n//             register: false,\n//             login: false,\n//         }\n//     }\n\n//     handleOpenReg = () => {\n//         this.setState({\n//             register: true,\n//         });\n//     };\n\n//     handleOpenLog = () => {\n//         this.setState({\n//             login: true,\n//         });\n//     };\n\n//     HandleCloseReg = () => {\n//         this.setState({\n//             register: false,\n//         });\n//     };\n\n//     handleCloseLog = () => {\n//         this.setState({\n//             login: false,\n//         });\n//     };\n\n//     render() {\n//         return (\n//             <div className=\"container\">\n//                 <AppBar position=\"static\">\n//                     <Toolbar className=\"root\">\n//                         <ButtonGroup>\n//                             {!this.props.token && (\n//                                 <Register\n//                                     updateToken={this.props.updateToken}\n//                                 />\n//                             )}\n//                             {this.props.token ? (\n//                                 <Button id=\"LogoutBtn\" onClick={this.props.clickLogout}>\n//                                     LOGOUT\n//                                 </Button>\n//                             ) : (\n//                                     <Login\n//                                         updateToken={this.props.updateToken} />\n//                                 )}\n//                         </ButtonGroup>\n//                     </Toolbar>\n//                 </AppBar>\n//                 <Typography className=\"root\" variant=\"h5\" noWrap>StyList</Typography>\n//             </div>\n//         );\n//     }\n// }","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx",[],["111","112"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx",["113","114"],"import React from 'react';\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Modal,\n} from '@material-ui/core';\n\nimport Login from './Login';\nimport Register from './Register';\n\ntype User =  {\n    token: string;\n    user: {\n        username: string;\n        id: string;\n    }\n}\n\ntype Props = {\n    updateToken: (newToken: string) => void;\n    // updateUser: (newUser: User) => void, \n};\n\ntype State = {\n    login: boolean;\n    handleopen: boolean;\n}\n\nexport default class Auth extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            login: true,\n            handleopen: false,\n        };\n    }\n\n    // loginHandle() {\n    //     this.setState({\n    //         login: !this.state.login,\n    //     });\n    // }\n\n    toggle = () => {\n        this.setState({\n            login: !this.state.login\n        })\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        })\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Dialog open={true}>\n                    <DialogTitle id=\"form-dialog-title\">\n                        <strong>StyList</strong>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogTitle>\n                            <Login\n                                login={this.state.login}\n                                toggle={this.toggle.bind(this)}\n                                updateToken={this.props.updateToken}/>\n                        </DialogTitle>\n                    </DialogContent>\n                    <DialogContent>\n                        <DialogTitle>\n                            <Register\n                                login={this.state.login}\n                                toggle={this.toggle.bind(this)}\n                                updateToken={this.props.updateToken} />\n                        </DialogTitle>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\n        // return (\n        //     <div className=\"container\">\n        //         {this.state.login === true ? (\n        //             <Login\n        //                 login={this.state.login}\n        //                 toggle={this.toggle.bind(this)}\n        //                 updateToken={this.props.updateToken}\n        //             />\n        //         ) : (\n        //                 <Register\n        //                     login={this.state.login}\n        //                     toggle={this.toggle.bind(this)}\n        //                     updateToken={this.props.updateToken}\n        //                 />\n        //             )}\n        //     </div>\n        // );\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx",["115"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormLabel,\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n} from '@material-ui/core';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\ntype Props = {\n    updateCloset: any,\n    updateOff: () => void,\n    token: string,\n    fetchClosetPosts: () => void\n}\n\ntype State = {\n    image: string,\n    editCategory: string,\n    handleopen: boolean\n}\n\nexport default class ClosetEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            image: '',\n            editCategory: this.props.updateCloset.category,\n            handleopen: false,\n        }\n    }\n\n    handleSubmitUpdate = () => {\n        const editCloset = new FormData()\n        editCloset.append('image', this.state.image)\n        editCloset.append('category', this.state.editCategory)\n        fetch(`${APIURL}/closet/update/${this.props.updateCloset.id}`, {\n            method: 'PUT',\n            body: editCloset,\n            headers: new Headers({\n                'Authorization': this.props.token\n            })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchClosetPosts();\n        })\n    }\n\n    editClosetForm = () => {\n        this.props.updateOff();\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    singleFileChangeHandler = (event: any) => {\n        this.setState({\n            image: event.target.files[0]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Dialog open={true} onClose={this.handleClose}>\n                <DialogTitle id=\"CreatePopup\">\n                        Update your closet!\n                    </DialogTitle>\n                    <DialogContent id=\"Create\">\n                        <input\n                            accept=\"image/*\"\n                            className=\"input\"\n                            type=\"file\"\n                            onChange={this.singleFileChangeHandler} />\n                            <label htmlFor=\"icon-button-file\">\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <PhotoCamera />\n                            </IconButton>\n                        </label>\n                        <br />\n                        <br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Category</FormLabel>\n                            <RadioGroup defaultValue=\"Category\" aria-label=\"Category\" name=\"customized-radios\" onChange={(e) => this.setState({ editCategory: e.target.value })}>\n                                <FormControlLabel value=\"Shirt\" control={<Radio />} label=\"Shirt\" />\n                                <FormControlLabel value=\"Pants\" control={<Radio />} label=\"Pants\" />\n                                <FormControlLabel value=\"Dress\" control={<Radio />} label=\"Dress\" />\n                                <FormControlLabel value=\"Outerwear\" control={<Radio />} label=\"Outerwear\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <DialogActions>\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={this.handleSubmitUpdate}>Update</Button>\n                        </label>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\n// 'Content-Type': 'application/json',\n\n{/* <TextField\nclassName=\"modal-text-field\"\nvalue={this.state.editCategory}\nonChange={(e) => this.setState({ editCategory: e.target.value })}\nlabel=\"Edit Category\"/> */}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx",["116","117","118","119"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\nimport { render } from '@testing-library/react';\n\ntype Props = {\n    // myCloset: any,\n    myCloset: Array<{ id: number, image: string, category: number }>\n    editUpdateCloset: (closet: any) => void,\n    updateOn: () => void,\n    fetchClosetPosts: () => void,\n    token: string\n}\nexport default class ClosetTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (closet: any) => {\n        fetch(`${APIURL}/closet/delete/${closet.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchClosetPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myCloset\n                    ? this.props.myCloset.map((myCloset) => (\n                        <Card key={myCloset.id}>\n                            <CardContent><img src={myCloset.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myCloset.category}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(myCloset); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myCloset) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n    // postMapper = () => {\n    //     let closets = this.props.myCloset;\n\n    //     return closets.map((closet: any, index: number) => {\n    //         return (\n    //             <Card key={index}>\n    //                 <CardContent><img src={closet.image} width=\"25%\" height=\"25%\" /></CardContent>\n    //                 <CardContent>{closet.category}</CardContent>\n    //                 <CardContent>\n    //                     <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(closet); this.props.updateOn() }}>Edit</Button>\n    //                     <Button variant=\"outlined\" onClick={() => { this.deletePost(closet) }}>Clear</Button>\n    //                 </CardContent>\n    //             </Card>\n    //         )\n    //     })\n    // }\n\n    // render() {\n    //     return (\n    //         <Table>\n    //             {this.postMapper()}\n    //         </Table>\n    //     )\n    // }\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx",["120","121","122"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\n\ntype Props = {\n    myWishlist: Array<{ id: number, image: string, comment: string }>,\n    editUpdateWishlist: (wishlist: any) => void,\n    updateOn: () => void,\n    fetchWishlistPosts: () => void,\n    token: string\n}\nexport default class WishlistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (wishlist: any) => {\n        fetch(`${APIURL}/wishlist/delete/${wishlist.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchWishlistPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myWishlist\n                    ? this.props.myWishlist.map((myWishlist) => (\n                        <Card key={myWishlist.id}>\n                            <CardContent><img src={myWishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myWishlist.comment}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(myWishlist); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myWishlist) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n//     postMapper = () => {\n//         let wishlists = this.props.myWishlist;\n\n//         return wishlists.map((wishlist: any, index: number) => {\n//             return (\n//                 <Card key={index}>\n//                     <CardContent><img src={wishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n//                     <CardContent>{wishlist.comment}</CardContent>\n//                     <CardContent>\n//                         <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(wishlist); this.props.updateOn() }}>Edit</Button>\n//                         <Button variant=\"outlined\" onClick={() => { this.deletePost(wishlist) }}>Clear</Button>\n//                     </CardContent>\n//                 </Card>\n//             )\n//         })\n//     }\n\n//     render() {\n//         return (\n//             <Table>\n//                 {this.postMapper()}\n//             </Table>\n//         )\n//     }\n// }","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx",["123"],"import React from 'react';\nimport APIURL from '../../../helpers/environment';\nimport {\n    Button,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormGroup,\n    Dialog,\n    TextField,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\ntype Props = {\n    updateWishlist: any,\n    updateOff: () => void,\n    token: string,\n    fetchWishlistPosts: () => void\n}\n\ntype State = {\n    image: string,\n    editComment: string,\n    handleopen: boolean\n}\n\nexport default class WishlistEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            image: '',\n            editComment: this.props.updateWishlist.category,\n            handleopen: false,\n        }\n    }\n\n    handleSubmitUpdate = () => {\n        const editWishlist = new FormData()\n        editWishlist.append('image', this.state.image)\n        editWishlist.append('comment', this.state.editComment)\n        fetch(`${APIURL}/wishlist/update/${this.props.updateWishlist.id}`, {\n            method: 'PUT',\n            body: editWishlist,\n            headers: new Headers({\n                'Authorization': this.props.token\n            })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchWishlistPosts();\n        })\n    }\n\n    editWishlistForm = () => {\n        this.props.updateOff();\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    singleFileChangeHandler = (event: any) => {\n        this.setState({\n            image: event.target.files[0]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Dialog open={true} onClose={this.handleClose}>\n                <DialogTitle id=\"CreatePopup\">\n                        Make a change to your wishlist!\n                    </DialogTitle>\n                    <DialogContent id=\"Create\">\n                    {/* <FormGroup> */}\n                        <input\n                            accept=\"image/*\"\n                            className=\"input\"\n                            multiple\n                            type=\"file\"\n                            onChange={this.singleFileChangeHandler}/>\n                            <label htmlFor=\"icon-button-file\">\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <PhotoCamera />\n                            </IconButton>\n                        </label>\n                        <br/>\n                        <br/>\n                        <TextField\n                            className=\"modal-text-field\"\n                            value={this.state.editComment}\n                            onChange={(e) => this.setState({ editComment: e.target.value })}\n                            label=\"Edit Comment\"/>\n                            <DialogActions>\n                        <label htmlFor=\"contained-button-file\">\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={this.handleSubmitUpdate}>Update</Button>\n                        </label>\n                        </DialogActions>\n                    {/* </FormGroup> */}\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/helpers/environment.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/UserList.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":6,"nodeType":"130","messageId":"131","endLine":12,"endColumn":10},{"ruleId":"128","severity":1,"message":"132","line":4,"column":5,"nodeType":"130","messageId":"131","endLine":4,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":13,"column":6,"nodeType":"130","messageId":"131","endLine":13,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":12,"column":6,"nodeType":"130","messageId":"131","endLine":12,"endColumn":10},{"ruleId":"128","severity":1,"message":"133","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"124","replacedBy":"134"},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"133","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"137","line":8,"column":5,"nodeType":"130","messageId":"131","endLine":8,"endColumn":15},{"ruleId":"128","severity":1,"message":"138","line":11,"column":8,"nodeType":"130","messageId":"131","endLine":11,"endColumn":16},{"ruleId":"128","severity":1,"message":"139","line":12,"column":8,"nodeType":"130","messageId":"131","endLine":12,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":20,"column":5,"nodeType":"142","messageId":"143","endLine":22,"endColumn":6},{"ruleId":"124","replacedBy":"144"},{"ruleId":"126","replacedBy":"145"},{"ruleId":"128","severity":1,"message":"146","line":6,"column":5,"nodeType":"130","messageId":"131","endLine":6,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":12,"column":6,"nodeType":"130","messageId":"131","endLine":12,"endColumn":10},{"ruleId":"147","severity":1,"message":"148","line":123,"column":1,"nodeType":"149","messageId":"150","endLine":127,"endColumn":28},{"ruleId":"128","severity":1,"message":"151","line":7,"column":5,"nodeType":"130","messageId":"131","endLine":7,"endColumn":10},{"ruleId":"128","severity":1,"message":"152","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":20,"column":5,"nodeType":"142","messageId":"143","endLine":22,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":40,"column":42,"nodeType":"155","endLine":40,"endColumn":95},{"ruleId":"128","severity":1,"message":"151","line":7,"column":5,"nodeType":"130","messageId":"131","endLine":7,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":18,"column":5,"nodeType":"142","messageId":"143","endLine":20,"endColumn":6},{"ruleId":"153","severity":1,"message":"154","line":38,"column":42,"nodeType":"155","endLine":38,"endColumn":97},{"ruleId":"128","severity":1,"message":"156","line":8,"column":5,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Component' is defined but never used.",["157"],["158"],"'React' is defined but never used.","'IconButton' is defined but never used.","'Register' is defined but never used.","'Login' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["157"],["158"],"'Modal' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Table' is defined but never used.","'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]