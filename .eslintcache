[{"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx":"1","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts":"2","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx":"3","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx":"4","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx":"5","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx":"6","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx":"7","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx":"8","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx":"9","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx":"10","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx":"11","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx":"12","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx":"13","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx":"14","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx":"15","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx":"16","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx":"17","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx":"18"},{"size":500,"mtime":1609359152291,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1609359152292,"results":"21","hashOfConfig":"20"},{"size":3646,"mtime":1610400546803,"results":"22","hashOfConfig":"20"},{"size":1798,"mtime":1610417633621,"results":"23","hashOfConfig":"20"},{"size":3180,"mtime":1610327066915,"results":"24","hashOfConfig":"20"},{"size":3938,"mtime":1610402569599,"results":"25","hashOfConfig":"20"},{"size":1038,"mtime":1609899898934,"results":"26","hashOfConfig":"20"},{"size":200,"mtime":1609898652157,"results":"27","hashOfConfig":"20"},{"size":3627,"mtime":1610336129438,"results":"28","hashOfConfig":"20"},{"size":2666,"mtime":1610408885208,"results":"29","hashOfConfig":"20"},{"size":4331,"mtime":1610498130048,"results":"30","hashOfConfig":"20"},{"size":1845,"mtime":1610327110723,"results":"31","hashOfConfig":"20"},{"size":4133,"mtime":1610498125111,"results":"32","hashOfConfig":"20"},{"size":2656,"mtime":1610467777866,"results":"33","hashOfConfig":"20"},{"size":2741,"mtime":1610417918806,"results":"34","hashOfConfig":"20"},{"size":2640,"mtime":1610468116278,"results":"35","hashOfConfig":"20"},{"size":3154,"mtime":1610484620102,"results":"36","hashOfConfig":"20"},{"size":2536,"mtime":1610418021701,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"jdknth",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/index.tsx",[],["84","85"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/reportWebVitals.ts",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/App.tsx",["86"],"import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\n\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\nimport Navbar from './components/Home/Navbar';\n\ntype Props = {\n    token: string | null\n}\n\nexport default class App extends React.Component<{}, Props> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            token: ''\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('token')) {\n            this.setState({\n                token: localStorage.getItem('token')\n            })\n        }\n    }\n\n    updateToken = (newToken: string) => {\n        localStorage.setItem('token', newToken);\n        this.setState({\n            token: newToken\n        });\n    }\n\n    logout = () => {\n        localStorage.clear();\n        this.setState({\n            token: ''\n        })\n    }\n\n    viewConductor = () => {\n        return (!this.state.token ?\n            <div>\n                <Router>\n                    <Auth updateToken={this.updateToken.bind(this)} />\n                </Router>\n            </div>\n            : <Home clickLogout={this.logout.bind(this)} token={this.state.token} />)\n    }\n\n    render() {\n        return (\n            <div>\n                {this.viewConductor()}\n                {/* <Auth updateToken={this.updateToken.bind(this)} />\n                <Home clickLogout={this.logout.bind(this)} token={this.state.sessionToken} /> */}\n            </div>\n        );\n    }\n}\n\n// import React from 'react';\n// import { BrowserRouter as Router } from 'react-router-dom';\n// import './App.css';\n\n// import Home from './components/Home/Home';\n// import Navbar from './components/Home/Navbar';\n\n// export default class App extends React.Component {\n//     state = {\n//         sessionToken: ''\n//     }\n\n//     // export default class App extends React.Component {\n//     //     constructor(props: any) {\n//     //         super(props);\n//     //         this.state = {\n//     //             token: ''\n//     //         }\n//     //     }\n\n//     componentDidMount() {\n//         if (localStorage.getItem('token')) {\n//             this.setState({\n//                 sessionToken: localStorage.getItem('token')\n//             })\n//         }\n//     }\n\n//     updateToken = (newToken: string) => {\n//         localStorage.setItem('token', newToken);\n//         this.setState({\n//             sessionToken: newToken\n//         });\n//     }\n\n//     clearToken = () => {\n//         localStorage.clear();\n//         this.setState({\n//             sessionToken: ''\n//         })\n//     }\n\n//     // protectedViews = () => {\n//     //     return (this.state.sessionToken === localStorage.getItem('token') ?\n//     //         <div className=\"App\">\n//     //             <Router>\n//     //                 <Home token={this.state.sessionToken} />\n//     //             </Router>\n//     //         </div>\n//     //         : <Navbar updateToken={this.updateToken.bind(this)} />)\n//     // }\n\n//     render() {\n//         return (\n//             <div>\n//                 {/* {this.protectedViews()} */}\n//                 <header className=\"app-header\">\n//                     <Router>\n//                         <Navbar clickLogout={this.clearToken.bind(this)} updateToken={this.updateToken.bind(this)} token={this.state.sessionToken} />\n//                         <Home /*clearToken={this.clearToken.bind(this)} updateToken={this.updateToken.bind(this)}*/ token={this.state.sessionToken} />\n//                     </Router>\n//                 </header>\n//             </div>\n//         );\n//     }\n// }","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Home.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Login.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Register.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Login.tsx",["87"],"import React, { Component } from 'react';\n\ntype LoginState = {\n    username: string,\n    password: string,\n}\n\nexport default class Login extends React.Component<{}, LoginState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    handleChange = (event: any) => {\n        event.preventDefault();\n        fetch('http://localhost:3000/user/login', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: this.state.username, \n                password: this.state.password\n            }),\n            headers: new Headers({\n                'Content-Type': 'application/json',\n            }),\n        })\n        .then((res) => res.json())\n        .then(data => {\n            this.props.setToken(data.sessionToken)\n        })\n    }\n\n    render() {\n        return(\n            <div>\n\n            </div>\n        )\n    }\n}",["88","89"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/auth/Register.tsx",["90","91"],"import React, {Component} from 'react';\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Navbar.tsx",["92"],"import React from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    ButtonGroup,\n    Button\n} from '@material-ui/core';\n\ntype Props = {\n    onClick: () => void;\n    token: string;\n};\n\nexport default class Navbar extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    handleOpenReg = () => {\n        this.setState({\n            register: true,\n        });\n    };\n\n    handleOpenLog = () => {\n        this.setState({\n            login: true,\n        });\n    };\n\n    HandleCloseReg = () => {\n        this.setState({\n            register: false,\n        });\n    };\n\n    handleCloseLog = () => {\n        this.setState({\n            login: false,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <AppBar position=\"static\">\n                    <Toolbar className=\"root\">\n                        <ButtonGroup>\n                                <Button id=\"LogoutBtn\" onClick={this.props.onClick}>\n                                    LOGOUT\n                                </Button>\n                        </ButtonGroup>\n                    </Toolbar>\n                </AppBar>\n                <Typography className=\"root\" variant=\"h5\" noWrap>StyList</Typography>\n            </div>\n        );\n    }\n}\n\n// import React from 'react';\n// import {\n//     AppBar,\n//     Toolbar,\n//     Typography,\n//     ButtonGroup,\n//     Button\n// } from '@material-ui/core';\n\n// import Login from '../Auth/Login';\n// import Register from '../Auth/Register';\n\n// type Props = {\n//     // onClick: () => void;\n//     token: string;\n//     clickLogout: () => void;\n//     updateToken: (newToken: string) => void;\n// };\n\n// type State = {\n//     register: boolean,\n//     login: boolean\n// }\n\n// export default class Navbar extends React.Component<Props, State> {\n//     constructor(props: Props) {\n//         super(props);\n//         this.state = {\n//             register: false,\n//             login: false,\n//         }\n//     }\n\n//     handleOpenReg = () => {\n//         this.setState({\n//             register: true,\n//         });\n//     };\n\n//     handleOpenLog = () => {\n//         this.setState({\n//             login: true,\n//         });\n//     };\n\n//     HandleCloseReg = () => {\n//         this.setState({\n//             register: false,\n//         });\n//     };\n\n//     handleCloseLog = () => {\n//         this.setState({\n//             login: false,\n//         });\n//     };\n\n//     render() {\n//         return (\n//             <div className=\"container\">\n//                 <AppBar position=\"static\">\n//                     <Toolbar className=\"root\">\n//                         <ButtonGroup>\n//                             {!this.props.token && (\n//                                 <Register\n//                                     updateToken={this.props.updateToken}\n//                                 />\n//                             )}\n//                             {this.props.token ? (\n//                                 <Button id=\"LogoutBtn\" onClick={this.props.clickLogout}>\n//                                     LOGOUT\n//                                 </Button>\n//                             ) : (\n//                                     <Login\n//                                         updateToken={this.props.updateToken} />\n//                                 )}\n//                         </ButtonGroup>\n//                     </Toolbar>\n//                 </AppBar>\n//                 <Typography className=\"root\" variant=\"h5\" noWrap>StyList</Typography>\n//             </div>\n//         );\n//     }\n// }","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetCreate.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Auth/Auth.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetEdit.tsx",["93","94"],"import React from 'react';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormGroup,\n    FormLabel,\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\n\ntype Props = {\n    updateCloset: any,\n    updateOff: () => void,\n    token: string,\n    fetchClosetPosts: () => void\n}\n\ntype State = {\n    image: string,\n    editCategory: string,\n    handleopen: boolean\n}\n\nexport default class ClosetEdit extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            image: '',\n            editCategory: this.props.updateCloset.category,\n            handleopen: false,\n        }\n    }\n\n    handleSubmitUpdate = (event: any) => {\n        const editCloset = new FormData()\n        editCloset.append('image', this.state.image)\n        editCloset.append('category', this.state.editCategory)\n        fetch(`http://localhost:3005/closet/update/${this.props.updateCloset.id}`, {\n            method: 'PUT',\n            body: editCloset,\n            headers: new Headers({\n                'Authorization': this.props.token\n            })\n        }).then(() => {\n            this.props.updateOff();\n            this.props.fetchClosetPosts();\n        })\n    }\n\n    editClosetForm = () => {\n        this.props.updateOff();\n    }\n\n    handleOpen = () => {\n        this.setState({\n            handleopen: true,\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            handleopen: false,\n        });\n    };\n\n    singleFileChangeHandler = (event: any) => {\n        this.setState({\n            image: event.target.files[0]\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Dialog open={true} onClose={this.handleClose}>\n                <DialogTitle id=\"CreatePopup\">\n                        Update your closet!\n                    </DialogTitle>\n                    <DialogContent id=\"Create\">\n                        <input\n                            accept=\"image/*\"\n                            className=\"input\"\n                            type=\"file\"\n                            onChange={this.singleFileChangeHandler} />\n                            <label htmlFor=\"icon-button-file\">\n                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <PhotoCamera />\n                            </IconButton>\n                        </label>\n                        <br />\n                        <br />\n                        <FormControl component=\"fieldset\">\n                            <FormLabel component=\"legend\">Category</FormLabel>\n                            <RadioGroup defaultValue=\"Category\" aria-label=\"Category\" name=\"customized-radios\" onChange={(e) => this.setState({ editCategory: e.target.value })}>\n                                <FormControlLabel value=\"Shirt\" control={<Radio />} label=\"Shirt\" />\n                                <FormControlLabel value=\"Pants\" control={<Radio />} label=\"Pants\" />\n                                <FormControlLabel value=\"Dress\" control={<Radio />} label=\"Dress\" />\n                                <FormControlLabel value=\"Outerwear\" control={<Radio />} label=\"Outerwear\" />\n                            </RadioGroup>\n                        </FormControl>\n                        <DialogActions>\n                        <label htmlFor=\"contained-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={this.handleSubmitUpdate}>Update</Button>\n                        </label>\n                        </DialogActions>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\n// 'Content-Type': 'application/json',\n\n{/* <TextField\nclassName=\"modal-text-field\"\nvalue={this.state.editCategory}\nonChange={(e) => this.setState({ editCategory: e.target.value })}\nlabel=\"Edit Category\"/> */}","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Closet/ClosetTable.tsx",["95","96","97","98"],"import React from 'react';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\nimport { render } from '@testing-library/react';\n\ntype Props = {\n    // myCloset: any,\n    myCloset: Array<{ id: number, image: string, category: number }>\n    editUpdateCloset: (closet: any) => void,\n    updateOn: () => void,\n    fetchClosetPosts: () => void,\n    token: string\n}\nexport default class ClosetTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (closet: any) => {\n        fetch(`http://localhost:3005/closet/delete/${closet.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchClosetPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myCloset\n                    ? this.props.myCloset.map((myCloset) => (\n                        <Card key={myCloset.id}>\n                            <CardContent><img src={myCloset.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myCloset.category}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(myCloset); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myCloset) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n    // postMapper = () => {\n    //     let closets = this.props.myCloset;\n\n    //     return closets.map((closet: any, index: number) => {\n    //         return (\n    //             <Card key={index}>\n    //                 <CardContent><img src={closet.image} width=\"25%\" height=\"25%\" /></CardContent>\n    //                 <CardContent>{closet.category}</CardContent>\n    //                 <CardContent>\n    //                     <Button variant=\"outlined\" onClick={() => { this.props.editUpdateCloset(closet); this.props.updateOn() }}>Edit</Button>\n    //                     <Button variant=\"outlined\" onClick={() => { this.deletePost(closet) }}>Clear</Button>\n    //                 </CardContent>\n    //             </Card>\n    //         )\n    //     })\n    // }\n\n    // render() {\n    //     return (\n    //         <Table>\n    //             {this.postMapper()}\n    //         </Table>\n    //     )\n    // }\n\n","/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistIndex.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistTable.tsx",["99","100","101"],"import React from 'react';\nimport {\n    Button,\n    Card,\n    CardContent,\n    Table,\n} from '@material-ui/core';\n\ntype Props = {\n    myWishlist: Array<{ id: number, image: string, comment: string }>,\n    editUpdateWishlist: (wishlist: any) => void,\n    updateOn: () => void,\n    fetchWishlistPosts: () => void,\n    token: string\n}\nexport default class WishlistTable extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    deletePost = (wishlist: any) => {\n        fetch(`http://localhost:3005/wishlist/delete/${wishlist.id}`, {\n            method: 'DELETE',\n            headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': this.props.token\n            })\n        }).then(() => this.props.fetchWishlistPosts())\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.myWishlist\n                    ? this.props.myWishlist.map((myWishlist) => (\n                        <Card key={myWishlist.id}>\n                            <CardContent><img src={myWishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n                            <CardContent>{myWishlist.comment}</CardContent>\n                            <CardContent>\n                                <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(myWishlist); this.props.updateOn() }}>Edit</Button>\n                                <Button variant=\"outlined\" onClick={() => { this.deletePost(myWishlist) }}>Clear</Button>\n                            </CardContent>\n                        </Card>\n                    ))\n                    : undefined}\n            </div>\n        )\n    }\n}\n\n//     postMapper = () => {\n//         let wishlists = this.props.myWishlist;\n\n//         return wishlists.map((wishlist: any, index: number) => {\n//             return (\n//                 <Card key={index}>\n//                     <CardContent><img src={wishlist.image} width=\"25%\" height=\"25%\" /></CardContent>\n//                     <CardContent>{wishlist.comment}</CardContent>\n//                     <CardContent>\n//                         <Button variant=\"outlined\" onClick={() => { this.props.editUpdateWishlist(wishlist); this.props.updateOn() }}>Edit</Button>\n//                         <Button variant=\"outlined\" onClick={() => { this.deletePost(wishlist) }}>Clear</Button>\n//                     </CardContent>\n//                 </Card>\n//             )\n//         })\n//     }\n\n//     render() {\n//         return (\n//             <Table>\n//                 {this.postMapper()}\n//             </Table>\n//         )\n//     }\n// }",["102","103"],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistCreate.tsx",[],"/Users/laurablitz/Desktop/WDOctober2020/Projects/RedBadge/StyListApp/client/src/components/Home/Wishlist/WishlistEdit.tsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"104","replacedBy":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","severity":1,"message":"115","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"112","line":1,"column":16,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":16,"column":5,"nodeType":"118","messageId":"119","endLine":18,"endColumn":6},{"ruleId":"108","severity":1,"message":"120","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":122,"column":1,"nodeType":"123","messageId":"124","endLine":126,"endColumn":28},{"ruleId":"108","severity":1,"message":"125","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":10},{"ruleId":"108","severity":1,"message":"126","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":19,"column":5,"nodeType":"118","messageId":"119","endLine":21,"endColumn":6},{"ruleId":"127","severity":1,"message":"128","line":39,"column":42,"nodeType":"129","endLine":39,"endColumn":95},{"ruleId":"108","severity":1,"message":"125","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":17,"column":5,"nodeType":"118","messageId":"119","endLine":19,"endColumn":6},{"ruleId":"127","severity":1,"message":"128","line":37,"column":42,"nodeType":"129","endLine":37,"endColumn":97},{"ruleId":"104","replacedBy":"130"},{"ruleId":"106","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.",["132"],["133"],"'React' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FormGroup' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Table' is defined but never used.","'render' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["132"],["133"],"no-global-assign","no-unsafe-negation"]